# Copyright 2017-2020 Axel Huebl, Franz Poeschel
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

##
## This configuration file is used by PIConGPU's TBG tool to create a
## batch script for PIConGPU runs. For a detailed description of PIConGPU
## configuration files including all available variables, see
##
##                      docs/TBG_macros.cfg
##


#################################
## Section: Required Variables ##
#################################

TBG_wallTime="2:00:00"

TBG_devices_x=2
TBG_devices_y=4
TBG_devices_z=1

TBG_gridSize="256 256 256" 
TBG_steps="10"

TBG_periodic="--periodic 1 1 1"


#################################
## Section: Optional Variables ##
#################################

# png image output (rough electron density and laser preview)
TBG_pngYX="--e_png.period 1                     \
           --e_png.axis yx --e_png.slicePoint 0.5 \
           --e_png.folder pngElectronsYX"

# Create a particle-energy histogram [in keV]
TBG_e_histogram="--e_energyHistogram.period 1 --e_energyHistogram.filter all  --e_energyHistogram.binCount 1024    \
                 --e_energyHistogram.minEnergy 0 --e_energyHistogram.maxEnergy 2000"
TBG_H_histogram="--H_energyHistogram.period 1 --H_energyHistogram.filter all --H_energyHistogram.binCount 1024    \
                 --H_energyHistogram.minEnergy 0 --H_energyHistogram.maxEnergy 2000"

# longitudinal phase space: in m_<species> c
TBG_e_PSypy="--e_phaseSpace.period 1 --e_phaseSpace.filter all --e_phaseSpace.space y --e_phaseSpace.momentum py --e_phaseSpace.min -2.0 --e_phaseSpace.max 2.0"
TBG_H_PSypy="--H_phaseSpace.period 1 --H_phaseSpace.filter all --H_phaseSpace.space y --H_phaseSpace.momentum py --H_phaseSpace.min -0.04 --H_phaseSpace.max 0.04"

# useful for heating tests
TBG_sumEnergy="--fields_energy.period 1 \
               --e_energy.period 1 --e_energy.filter all \
               --H_energy.period 1 --H_energy.filter all"
TBG_chargeConservation="--chargeConservation.period 1"

TBG_particleCounter=" "

# for Ionization Current
TBG_e_ParticleCount="--e_macroParticlesCount.period 1"

# regular output
TBG_openPMD="--openPMD.period 250 --openPMD.file simData --openPMD.ext bp"


#TBG_plugins="!TBG_e_histogram !TBG_H_histogram !TBG_C_histogram !TBG_N_histogram \
#             !TBG_e_PSypy !TBG_H_PSypy !TBG_C_PSypy !TBG_N_PSypy                 \
#             !TBG_sumEnergy !TBG_chargeConservation                              \
#             !TBG_openPMD"

TBG_plugins="!TBG_e_histogram !TBG_H_histogram \
             !TBG_sumEnergy !TBG_chargeConservation !TBG_particleCounter 	 \
             !TBG_e_ParticleCount !TBG_pngYX" 

#################################
## Section: Program Parameters ##
#################################

TBG_deviceDist="!TBG_devices_x !TBG_devices_y !TBG_devices_z"

TBG_programParams="-d !TBG_deviceDist \
                   -g !TBG_gridSize   \
                   -s !TBG_steps      \
                   !TBG_periodic      \
                   !TBG_plugins       \
                   --percent 1
                   --versionOnce"

# TOTAL number of devices
TBG_tasks="$(( TBG_devices_x * TBG_devices_y * TBG_devices_z ))"

"$TBG_cfgPath"/submitAction.sh
